$width: 300px;
$key: width;
@mixin box($w, $h, $lh, $bg, $circle: false){
    width: $w;
    height: $h;
    line-height: $lh;
    background: $bg;
    @if $circle == true{
        border-radius: 50%;
    }@else {
        border-radius: $h /10;
    }
}

%box{
    // đây là placeholder 
    width: 100px;    
    height: 200px;
};


// .box1{
//     #{$key}: $width;
//     @include box($width,200px,100px, #999, false)
//     &-text{ //parent selector
//         font:{
//             family: "Arial";
//             weight: bold;
//             size: 1.5em;
//         };
//     };
//     &:hover &-text{
//         color: #fff;
//     };
// };
// .box2{
//     @extend .box1;
//     &-text{ //parent selector
//         @extend .box1-text;
//         };
//     };
//     &:hover &-text{
//         color: #fff;
//     };
// };
// ----------------------------- 

%common{
    background: #00e5ff;
    height: 20px;
    border-radius: 10px;
    text-align: center;
    margin: 5px;
}

$sizes: 20, 50, 100;

@each $size in $sizes{
    .nav-#{$size}{
        width: $size * 5px;
        @extend %common;
    }
}

// -------------------------- 
//key: value

// $size: (
//     20: 20px,
//     50: 50px,
//     100: 100px
//     );
// @each $key, $value in $sizes{
//     .nav-#{$key}{
//         width: $value * 5px;
//         @extend %common;
//     }
// }


// ---------------------------------- 
.card{
    width: 500px;
    background: #adadad;
    padding: 20px;
    .content{
        margin: 10px;
        padding: 10px;
    }
}

// @for $i from 1 through 4 {
//     .content:nth-child(#{$i}){
//         opacity: $i * 0.1;
//     }
// }
// @for $i from 1 to 4 { //không lấy giá trị cuối
//     .content:nth-child(#{$i}){
//         opacity: $i * 0.1;
//     }
// }
// -------------------- While -------------------- 
$n: 1;
@while $n < 5{
    .content:nth-child(#{$n}){
            opacity: $n * 0.1;
    }

    $n: $n+1;
}

// -------------List Method ------------- 

$list: 1px, 2px, 3px;


// -------------- append ------------- 
// $newlist : append($list, 4px);

// @debug $newlist;
// @debug $list;

// ----------------nth--------------- 
$item: nth($list, 2);
@debug $item;


// ----------------------
$new-item: set-nth($list, 1, 3px);

@debug $new-item;
@debug $list;
@debug length($list);

$length: length($list);
@for $i from 1 through $length{
    @debug nth($list, $i) 
};

// -------------------------- Map methods
/**
map-get
map-remove
map-merge
map-values
**/
$map: (hard: 50px, medium: 30px, short: 10px);
$map2: (hard2: 50px, medium2: 30px, short2: 10px);

@debug map-get($map, medium); // lay medium trong map

$newlist: map-remove($map, long); //remove long trong map

@debug $newlist;
@debug $map;

@debug map-merge($map, $map2); //cong 2 map vao voi nhau
@debug map-merge($map, (center: 100px)); //cong 2 map vao voi nhau

@debug  map-values($map); //tra lai het giá trị của $map